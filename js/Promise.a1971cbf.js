(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["Promise"],{5118:function(e,n,t){(function(e){var r="undefined"!==typeof e&&e||"undefined"!==typeof self&&self||window,o=Function.prototype.apply;function s(e,n){this._id=e,this._clearFn=n}n.setTimeout=function(){return new s(o.call(setTimeout,r,arguments),clearTimeout)},n.setInterval=function(){return new s(o.call(setInterval,r,arguments),clearInterval)},n.clearTimeout=n.clearInterval=function(e){e&&e.close()},s.prototype.unref=s.prototype.ref=function(){},s.prototype.close=function(){this._clearFn.call(r,this._id)},n.enroll=function(e,n){clearTimeout(e._idleTimeoutId),e._idleTimeout=n},n.unenroll=function(e){clearTimeout(e._idleTimeoutId),e._idleTimeout=-1},n._unrefActive=n.active=function(e){clearTimeout(e._idleTimeoutId);var n=e._idleTimeout;n>=0&&(e._idleTimeoutId=setTimeout((function(){e._onTimeout&&e._onTimeout()}),n))},t("6017"),n.setImmediate="undefined"!==typeof self&&self.setImmediate||"undefined"!==typeof e&&e.setImmediate||this&&this.setImmediate,n.clearImmediate="undefined"!==typeof self&&self.clearImmediate||"undefined"!==typeof e&&e.clearImmediate||this&&this.clearImmediate}).call(this,t("c8ba"))},"52cf":function(e,n,t){"use strict";t.r(n);var r=function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("v-container",{staticStyle:{padding:"0"},attrs:{fluid:"","fill-height":"",id:"promise","grid-list-md":""}},[t("Blog",{attrs:{items:e.items,time:e.time,title:e.title}},[t("div",{staticClass:"blogcontent"},[t("v-layout",{attrs:{row:"",wrap:""}},[t("v-flex",{attrs:{xs12:""}},[t("v-hover",{scopedSlots:e._u([{key:"default",fn:function(n){var r=n.hover;return t("v-card",{class:"elevation-"+(r?12:2),attrs:{"min-height":"200"}},[t("v-card-title",[t("h3",{attrs:{id:"Promise"}},[e._v("Promise")])]),t("v-divider"),t("v-card-text",[t("v-layout",{attrs:{row:"",wrap:""}},[t("v-flex",{attrs:{xs12:""}},[t("div",{staticClass:"part"},[t("p",[e._v("1. "),t("code",[e._v("Promise")]),e._v(" 就是解决回调地狱（过多的回调函数和回调嵌套会让代码看起来恶心，难懂，bug多）")]),t("p",[e._v("2. 使用"),t("code",[e._v("Promise")]),e._v("构造函数需要传递一个函数，此函数带有参数"),t("code",[e._v("resolve")]),e._v(", "),t("code",[e._v("reject")]),t("ul",[t("li",[e._v("resolve：会让promise成功返回值，可以通过调用promise实例then方法的第一个回调函数接受返回值")]),t("li",[e._v("reject：会让promise返回报错的值，可以通过调用promise实例then方法的第二个回调函数或者catch方法接受返回值")])])]),t("p",[e._v("3. promise实例的"),t("code",[e._v("finally")]),e._v("方法最终都会执行")]),t("p",[e._v("4. promise实例的"),t("code",[e._v("then")]),e._v("、"),t("code",[e._v("catch")]),e._v("、"),t("code",[e._v("finally")]),e._v("方法都会返回promise实例，能够方便实现链式调用")])])]),t("v-flex",{attrs:{xs12:""}},[t("v-tabs",{attrs:{color:"light-green darken-1",dark:"","slider-color":"yellow"}},[t("v-tab",{key:"demo1",attrs:{ripple:""}},[e._v("demo1")]),t("v-tab-item",{key:"demo1"},[t("v-card",{attrs:{flat:""}},[t("v-card-text",[t("pre",{staticClass:"code"},[e._v(e._s(e.pres[0]))])])],1)],1)],1)],1),t("v-flex",{attrs:{xs12:""}},[t("div",{staticClass:"part"},[t("p",[e._v("5. 调用promise实例的方法（例如then）是立即执行的，但是传递给其中的回调函数是异步执行的")])])]),t("v-flex",{attrs:{xs12:""}},[t("v-tabs",{attrs:{color:"light-green darken-1",dark:"","slider-color":"yellow"}},[t("v-tab",{key:"demo2",attrs:{ripple:""}},[e._v("demo2")]),t("v-tab-item",{key:"demo2"},[t("v-card",{attrs:{flat:""}},[t("v-card-text",[t("pre",{staticClass:"code"},[e._v(e._s(e.pres[1]))])])],1)],1)],1)],1),t("v-flex",{attrs:{xs12:""}},[t("div",{staticClass:"part"},[t("p",[e._v("6. 链式调用promise如果实例方法（例如then）返回的值不是promise实例，则其后的调用并不会等待之前的调用")])])]),t("v-flex",{attrs:{xs12:""}},[t("v-tabs",{attrs:{color:"light-green darken-1",dark:"","slider-color":"yellow"}},[t("v-tab",{key:"demo3",attrs:{ripple:""}},[e._v("demo3")]),t("v-tab-item",{key:"demo3"},[t("v-card",{attrs:{flat:""}},[t("v-card-text",[t("v-layout",{attrs:{row:"",wrap:""}},[t("v-flex",{attrs:{xs12:"",sm6:"","pr-1":""}},[t("pre",{staticClass:"code"},[e._v(e._s(e.pres[2]))])]),t("v-flex",{attrs:{xs12:"",sm6:"","pr-1":""}},[t("pre",{staticClass:"code"},[e._v(e._s(e.pres[3]))])])],1)],1)],1)],1)],1)],1),t("v-flex",{attrs:{xs12:""}},[t("div",{staticClass:"part"},[t("p",[e._v("7. 调用promise实例的"),t("code",[e._v("all")]),e._v("方法，可以传递一组promise，只有当所有的promise都resolve了，此方法才会resolve；如果有一个promise reject了则reject")])])]),t("v-flex",{attrs:{xs12:""}},[t("v-tabs",{attrs:{color:"light-green darken-1",dark:"","slider-color":"yellow"}},[t("v-tab",{key:"demo4",attrs:{ripple:""}},[e._v("demo4")]),t("v-tab-item",{key:"demo4"},[t("v-card",{attrs:{flat:""}},[t("v-card-text",[t("pre",{staticClass:"code"},[e._v(e._s(e.pres[4]))])])],1)],1)],1)],1),t("v-flex",{attrs:{xs12:""}},[t("div",{staticClass:"part"},[t("p",[e._v("8. 调用promise实例的"),t("code",[e._v("race")]),e._v("方法，可以传递一组promise，如果有一个promise resolve或者reject了就执行相应操作")])])]),t("v-flex",{attrs:{xs12:""}},[t("v-tabs",{attrs:{color:"light-green darken-1",dark:"","slider-color":"yellow"}},[t("v-tab",{key:"demo5",attrs:{ripple:""}},[e._v("demo5")]),t("v-tab-item",{key:"demo5"},[t("v-card",{attrs:{flat:""}},[t("v-card-text",[t("pre",{staticClass:"code"},[e._v(e._s(e.pres[5]))])])],1)],1)],1)],1)],1)],1)],1)}}])})],1)],1),t("v-layout",{attrs:{row:"",wrap:""}},[t("v-flex",{attrs:{xs12:""}},[t("v-hover",{scopedSlots:e._u([{key:"default",fn:function(n){var r=n.hover;return t("v-card",{class:"elevation-"+(r?12:2),attrs:{"min-height":"200"}},[t("v-card-title",[t("h3",{attrs:{id:"async"}},[e._v("异步函数")])]),t("v-divider"),t("v-card-text",[t("p",{staticClass:".body-1"},[e._v("1. 使用"),t("code",[e._v("async")]),e._v("和"),t("code",[e._v("await")]),e._v("可以实现类似同步的方式写异步")]),t("p",{staticClass:".body-1"},[e._v("2. "),t("code",[e._v("await")]),e._v("必须在"),t("code",[e._v("async")]),e._v("函数内部使用")]),t("p",{staticClass:".body-1"},[e._v("3. "),t("code",[e._v("async")]),e._v("可以有序列调用、并发调用、平行调用")]),t("v-tabs",{attrs:{color:"light-green darken-1",dark:"","slider-color":"yellow"}},[t("v-tab",{key:"a1",attrs:{ripple:""}},[e._v("序列调用")]),t("v-tab",{key:"a2",attrs:{ripple:""}},[e._v("并发调用")]),t("v-tab",{key:"a3",attrs:{ripple:""}},[e._v("平行调用")]),t("v-tab-item",{key:"a1"},[t("v-card",{attrs:{flat:""}},[t("v-card-text",[t("pre",{staticClass:"code"},[e._v(e._s(e.pres[6]))])])],1)],1),t("v-tab-item",{key:"a2"},[t("v-card",{attrs:{flat:""}},[t("v-card-text",[t("pre",{staticClass:"code"},[e._v(e._s(e.pres[7]))])])],1)],1),t("v-tab-item",{key:"a3"},[t("v-card",{attrs:{flat:""}},[t("v-card-text",[t("pre",{staticClass:"code"},[e._v(e._s(e.pres[8]))])])],1)],1)],1),t("p",{staticClass:".body-1"},[e._v("4. 使用"),t("code",[e._v("async")]),e._v("异步函数表达式会返回一个promise对象")]),t("pre",{staticClass:"code"},[e._v(e._s(e.pres[9]))])],1)],1)}}])})],1)],1)],1)])],1)},o=[],s=t("fd3f"),a=(t("5118"),{components:{Blog:s["a"]},data:function(){return{time:"2018-12-25",title:"Promise解决回调地狱",items:[{title:"Promise",target:"#Promise"},{divider:!0},{title:"异步函数",target:"#async"},{divider:!0}],pres:["\n    const pm = new Promise((resolve, reject) => {\n        setTimeout(function() {\n            resolve('OK');\n            reject('err'); // resolve先执行，所以此方法不会执行\n        }, 500);\n    });\n\n    pm.then((value) => {\n        // 接受resolve\n        console.log(value);\n        return value+\"!\"; // 将值传递给promise实例\n    }, (err) => {\n        // 接受reject\n        console.log(err);\n    }).then((value) => {\n        // 链式调用\n        console.log(value);\n        return Promise.reject('err');\n    }).catch(function(err) {\n        console.log(err);\n    }).finally(() => {\n        console.log('最终都会执行')\n    }); \n    // OK \n    // OK!\n    // err\n    // 最终都会执行\n","\n    const pm = Promise.resolve('OK');\n    let rpm = pm.then((value)=>{\n        // then中的处理函数是异步执行的\n        return value;\n    });\n    console.log(rpm);\n    setTimeout(()=>{\n        console.log(rpm);\n    });\n\n    // Promise {<pending>}\n    // Promise {<resolved>: \"OK\"}\n","\n    Promise.resolve('Ok').then(function(value) {\n        setTimeout(function() {\n            console.log('1-> ' + value);\n        }, 1);\n        return value;\n    }).then(function(value) {\n        setTimeout(function() {\n            console.log('2-> ' + value);\n        }, 1)\n        return value;\n    }).then(function(value) {\n        console.log('3-> ' + value);\n    });\n    // 3-> Ok\n    // 1-> Ok\n    // 2-> Ok\n","\n    Promise.resolve('Ok').then(function(value) {\n        return new Promise(function(resolve, reject) {\n            setTimeout(function() {\n                console.log('1-> ' + value);\n                resolve(value);\n            }, 1);\n        });\n    }).then(function(value) {\n        setTimeout(function() {\n            console.log('2-> ' + value);\n        }, 1)\n        return value;\n    }).then(function(value) {\n        console.log('3-> ' + value);\n    });\n\n    // 1-> Ok\n    // 3-> Ok\n    // 2-> Ok\n","\n    const pm1 = Promise.resolve('11');\n    const pm2 = Promise.reject('22');\n    const pm3 = new Promise(function(resolve, reject) {\n        setTimeout(function() {\n            resolve('33');\n        }, 100)\n    });\n\n    Promise.all([pm1, pm2, pm3]).then(function(values) {\n        console.log(values);\n    }).catch(err => { \n        console.log(err)\n    });\n    // 22\n","\n    const pm1 = Promise.resolve('11');\n    const pm2 = Promise.reject('22');\n    const pm3 = new Promise(function(resolve, reject) {\n        setTimeout(function() {\n            resolve('33');\n        }, 100)\n    });\n\n    Promise.race([pm1, pm2, pm3]).then(function(value) {\n        console.log(value);\n        return '执行完了';\n    }).catch(err => { \n        console.log(err)\n    });\n\n    // 11\n","\n    function fn1() {\n        return new Promise(resolve => {\n            setTimeout(() => {\n                resolve('1秒');\n            }, 1000);\n        });\n    }\n\n    function fn2() {\n        return new Promise(resolve => {\n            setTimeout(() => {\n                resolve('2秒');\n            }, 2000);\n        });\n    }\n\n    async function fn() {\n        const start = performance.now();\n        var res1 = await fn1(); // 1秒后执行\n        var res2 = await fn2(); // 基于上一个await，这里需要执行另外一个2秒\n        const end = performance.now();\n        console.log(res1, res2, end - start); // 最后的执行时间肯定是3秒左右\n    }\n    fn();\n","\n    function fn1() {\n        return new Promise(resolve => {\n            setTimeout(() => {\n                resolve('1秒');\n            }, 1000);\n        });\n    }\n\n    function fn2() {\n        return new Promise(resolve => {\n            setTimeout(() => {\n                resolve('2秒');\n            }, 2000);\n        });\n    }\n\n    async function fn() {\n        const start = performance.now();\n        let res1 = fn1(); // 立即开始计时\n        let res2 = fn2(); // 立即开始计时\n        console.log(await res1, await res2);\n        const end = performance.now();\n        console.log(end - start); // 最后执行时间2秒左右\n    }\n    fn();\n","\n    function fn1() {\n        return new Promise(resolve => {\n            setTimeout(() => {\n                resolve('1秒');\n            }, 1000);\n        });\n    }\n\n    function fn2() {\n        return new Promise(resolve => {\n            setTimeout(() => {\n                resolve('2秒');\n            }, 2000);\n        });\n    }\n\n    async function fn() {\n        const start = performance.now();\n        let res = await Promise.all([\n            (async () => {\n                return await fn1();\n            })(),\n            (async () => {\n                return await fn2();\n            })()\n        ])\n        const end = performance.now();\n        console.log(res, end-start);\n    }\n    fn(); // 最后执行时间2秒左右\n","\n    function fn1() {\n        return new Promise(resolve => {\n            setTimeout(() => {\n                resolve('1秒');\n            }, 1000);\n        });\n    }\n\n    function fn2() {\n        return new Promise(resolve => {\n            setTimeout(() => {\n                resolve('2秒');\n            }, 2000);\n        });\n    }\n\n    const fn = async function () {\n        return await Promise.all([\n            (async () => {\n                return await fn1();\n            })(),\n            (async () => {\n                return await fn2();\n            })()\n        ])\n    }\n    fn().then(val => {\n        console.log(val);\n    })\n"]}},mounted:function(){},methods:{}}),i=a,l=(t("a176"),t("2877")),c=t("6544"),u=t.n(c),v=t("b0af"),f=t("99d9"),m=t("12b2"),d=t("a523"),p=t("ce7e"),h=t("0e8f"),_=t("ce87"),y=t("a722"),g=t("71a3"),w=t("c671"),T=t("fe57"),b=Object(l["a"])(i,r,o,!1,null,null,null);n["default"]=b.exports;u()(b,{VCard:v["a"],VCardText:f["a"],VCardTitle:m["a"],VContainer:d["a"],VDivider:p["a"],VFlex:h["a"],VHover:_["a"],VLayout:y["a"],VTab:g["a"],VTabItem:w["a"],VTabs:T["a"]})},6017:function(e,n,t){(function(e,n){(function(e,t){"use strict";if(!e.setImmediate){var r,o=1,s={},a=!1,i=e.document,l=Object.getPrototypeOf&&Object.getPrototypeOf(e);l=l&&l.setTimeout?l:e,"[object process]"==={}.toString.call(e.process)?m():d()?p():e.MessageChannel?h():i&&"onreadystatechange"in i.createElement("script")?_():y(),l.setImmediate=c,l.clearImmediate=u}function c(e){"function"!==typeof e&&(e=new Function(""+e));for(var n=new Array(arguments.length-1),t=0;t<n.length;t++)n[t]=arguments[t+1];var a={callback:e,args:n};return s[o]=a,r(o),o++}function u(e){delete s[e]}function v(e){var n=e.callback,r=e.args;switch(r.length){case 0:n();break;case 1:n(r[0]);break;case 2:n(r[0],r[1]);break;case 3:n(r[0],r[1],r[2]);break;default:n.apply(t,r);break}}function f(e){if(a)setTimeout(f,0,e);else{var n=s[e];if(n){a=!0;try{v(n)}finally{u(e),a=!1}}}}function m(){r=function(e){n.nextTick((function(){f(e)}))}}function d(){if(e.postMessage&&!e.importScripts){var n=!0,t=e.onmessage;return e.onmessage=function(){n=!1},e.postMessage("","*"),e.onmessage=t,n}}function p(){var n="setImmediate$"+Math.random()+"$",t=function(t){t.source===e&&"string"===typeof t.data&&0===t.data.indexOf(n)&&f(+t.data.slice(n.length))};e.addEventListener?e.addEventListener("message",t,!1):e.attachEvent("onmessage",t),r=function(t){e.postMessage(n+t,"*")}}function h(){var e=new MessageChannel;e.port1.onmessage=function(e){var n=e.data;f(n)},r=function(n){e.port2.postMessage(n)}}function _(){var e=i.documentElement;r=function(n){var t=i.createElement("script");t.onreadystatechange=function(){f(n),t.onreadystatechange=null,e.removeChild(t),t=null},e.appendChild(t)}}function y(){r=function(e){setTimeout(f,0,e)}}})("undefined"===typeof self?"undefined"===typeof e?this:e:self)}).call(this,t("c8ba"),t("f28c"))},"957f":function(e,n,t){},a176:function(e,n,t){"use strict";var r=t("957f"),o=t.n(r);o.a},f28c:function(e,n){var t,r,o=e.exports={};function s(){throw new Error("setTimeout has not been defined")}function a(){throw new Error("clearTimeout has not been defined")}function i(e){if(t===setTimeout)return setTimeout(e,0);if((t===s||!t)&&setTimeout)return t=setTimeout,setTimeout(e,0);try{return t(e,0)}catch(n){try{return t.call(null,e,0)}catch(n){return t.call(this,e,0)}}}function l(e){if(r===clearTimeout)return clearTimeout(e);if((r===a||!r)&&clearTimeout)return r=clearTimeout,clearTimeout(e);try{return r(e)}catch(n){try{return r.call(null,e)}catch(n){return r.call(this,e)}}}(function(){try{t="function"===typeof setTimeout?setTimeout:s}catch(e){t=s}try{r="function"===typeof clearTimeout?clearTimeout:a}catch(e){r=a}})();var c,u=[],v=!1,f=-1;function m(){v&&c&&(v=!1,c.length?u=c.concat(u):f=-1,u.length&&d())}function d(){if(!v){var e=i(m);v=!0;var n=u.length;while(n){c=u,u=[];while(++f<n)c&&c[f].run();f=-1,n=u.length}c=null,v=!1,l(e)}}function p(e,n){this.fun=e,this.array=n}function h(){}o.nextTick=function(e){var n=new Array(arguments.length-1);if(arguments.length>1)for(var t=1;t<arguments.length;t++)n[t-1]=arguments[t];u.push(new p(e,n)),1!==u.length||v||i(d)},p.prototype.run=function(){this.fun.apply(null,this.array)},o.title="browser",o.browser=!0,o.env={},o.argv=[],o.version="",o.versions={},o.on=h,o.addListener=h,o.once=h,o.off=h,o.removeListener=h,o.removeAllListeners=h,o.emit=h,o.prependListener=h,o.prependOnceListener=h,o.listeners=function(e){return[]},o.binding=function(e){throw new Error("process.binding is not supported")},o.cwd=function(){return"/"},o.chdir=function(e){throw new Error("process.chdir is not supported")},o.umask=function(){return 0}}}]);
//# sourceMappingURL=Promise.a1971cbf.js.map