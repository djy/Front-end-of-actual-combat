(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["designPattern"],{"16a1":function(t,n,e){},3198:function(t,n,e){"use strict";e.r(n);var s=function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("v-container",{staticStyle:{padding:"0"},attrs:{fluid:"","fill-height":"",id:"designPattern","grid-list-md":""}},[e("Blog",{attrs:{items:t.items,time:t.time,title:t.title}},[e("div",{staticClass:"blogcontent"},[e("v-layout",{attrs:{row:"",wrap:""}},[e("v-flex",{attrs:{sm12:""}},[e("v-hover",{scopedSlots:t._u([{key:"default",fn:function(n){var s=n.hover;return e("v-card",{class:"elevation-"+(s?12:2),attrs:{"min-height":"300"}},[e("v-card-title",[e("h3",{attrs:{id:"constructor"}},[t._v("构造函数模式")])]),e("v-divider"),e("v-card-text",[e("p",{staticClass:"subtitle-1"},[e("span",{staticClass:"font-weight-bold"},[t._v("说明")]),t._v("：创建新对象，并且为新对象添加属性和方法")]),e("p",{staticClass:"body-2"},[t._v("以下是构造方式的三种应用方法")]),e("ul",[e("li",[e("p",[t._v("创建对象")]),e("pre",{staticClass:"code"},[t._v(t._s(t.pres[0]))])]),e("li",[e("p",[t._v("构造器")]),e("pre",{staticClass:"code"},[t._v(t._s(t.pres[1]))])]),e("li",[e("p",[t._v("利用原型的构造器")]),e("pre",{staticClass:"code"},[t._v(t._s(t.pres[2]))])])])])],1)}}])})],1),e("v-flex",{attrs:{sm12:""}},[e("v-hover",{scopedSlots:t._u([{key:"default",fn:function(n){var s=n.hover;return e("v-card",{class:"elevation-"+(s?12:2),attrs:{"min-height":"300"}},[e("v-card-title",[e("h3",{attrs:{id:"factory"}},[t._v("工厂模式")])]),e("v-divider"),e("v-card-text",[e("p",{staticClass:"subtitle-1"},[e("span",{staticClass:"font-weight-bold"},[t._v("说明")]),t._v("：根据传入的类型创建对象")]),e("pre",{staticClass:"code"},[t._v(t._s(t.pres[3]))])])],1)}}])})],1),e("v-flex",{attrs:{sm12:""}},[e("v-hover",{scopedSlots:t._u([{key:"default",fn:function(n){var s=n.hover;return e("v-card",{class:"elevation-"+(s?12:2),attrs:{"min-height":"300"}},[e("v-card-title",[e("h3",{attrs:{id:"module"}},[t._v("模块模式")])]),e("v-divider"),e("v-card-text",[e("p",{staticClass:"subtitle-1"},[e("span",{staticClass:"font-weight-bold"},[t._v("说明")]),t._v("：提供私有和公共的属性和方法")]),e("pre",{staticClass:"code"},[t._v(t._s(t.pres[4]))])])],1)}}])})],1),e("v-flex",{attrs:{sm12:""}},[e("v-hover",{scopedSlots:t._u([{key:"default",fn:function(n){var s=n.hover;return e("v-card",{class:"elevation-"+(s?12:2),attrs:{"min-height":"300"}},[e("v-card-title",[e("h3",{attrs:{id:"single"}},[t._v("单例模式")])]),e("v-divider"),e("v-card-text",[e("p",{staticClass:"subtitle-1"},[e("span",{staticClass:"font-weight-bold"},[t._v("说明")]),t._v("：只会创建一个实例")]),e("pre",{staticClass:"code"},[t._v(t._s(t.pres[5]))])])],1)}}])})],1),e("v-flex",{attrs:{sm12:""}},[e("v-hover",{scopedSlots:t._u([{key:"default",fn:function(n){var s=n.hover;return e("v-card",{class:"elevation-"+(s?12:2),attrs:{"min-height":"300"}},[e("v-card-title",[e("h3",{attrs:{id:"observer"}},[t._v("观察者模式")])]),e("v-divider"),e("v-card-text",[e("p",{staticClass:"subtitle-1"},[e("span",{staticClass:"font-weight-bold"},[t._v("说明")]),t._v("：当一个对象状态发生变化，其他关联的对象能够同步刷新")]),e("pre",{staticClass:"code"},[t._v(t._s(t.pres[6]))])])],1)}}])})],1),e("v-flex",{attrs:{sm12:""}},[e("v-hover",{scopedSlots:t._u([{key:"default",fn:function(n){var s=n.hover;return e("v-card",{class:"elevation-"+(s?12:2),attrs:{"min-height":"300"}},[e("v-card-title",[e("h3",{attrs:{id:"subpub"}},[t._v("发布/订阅模式式")])]),e("v-divider"),e("v-card-text",[e("p",{staticClass:"subtitle-1"},[e("span",{staticClass:"font-weight-bold"},[t._v("说明")]),t._v("：订阅者能够通过函数注册和接收发布者的消息")]),e("pre",{staticClass:"code"},[t._v(t._s(t.pres[7]))])])],1)}}])})],1)],1)],1)])],1)},i=[],a=e("fd3f"),o={components:{Blog:a["a"]},data:function(){return{pres:["\n    const obj = {};\n    const obj = Object.create(Object.prototype);\n    const obj = new Object(); \n    ","\n    function Obj(a, b) {\n        this.a = a;\n        this.b = b;\n        this.fn = function() {\n            return this.a + \"|\" + this.b;\n        }\n    }\n\n    const o = new Obj('aa', 'bb');\n    o.fn();\n    ","\n    function Obj(a, b) {\n        this.a = a;\n        this.b = b;\n        Obj.prototype.fn = function() {\n            return this.a + \"|\" + this.b;\n        }\n    }\n\n    const o = new Obj('aa', 'bb');\n    console.log(o.fn());\n    ","\n    function Dog(option) {\n        this.size = option.size;\n    }\n    function Cat(option) {\n        this.size = option.size;\n    }\n    function Animal() {}\n    Animal.createAnimal = function(option) {\n        let animal;\n        switch (option.type) {\n            case 'dog':\n                animal = new Dog(option);\n                break;\n            case 'cat':\n                animal = new Cat(option);\n                break;\n            default:\n                break;\n        }\n        return animal;\n    }\n\n    const myAnimal = Animal.createAnimal({\n        type: 'cat',\n        size: 'small'\n    })\n\n    console.log(myAnimal)\n    ","\n    const myModule = (function() {\n        let aa; // private\n        let bb;\n\n        return {\n            setAB(a, b) { // public\n                aa = a;\n                bb = b;\n            },\n            getAB() {\n                return aa + \"|\" + bb\n            }\n        }\n    })()\n\n    myModule.setAB('a', 'b');\n    myModule.getAB();\n    ","\n    const singlePattern = (function(){\n        let instance;\n        function createInstance() {\n            let myName;\n        \n            return {\n                setName: function(name) {\n                    myName = name;\n                },\n                getName: function() {\n                    return myName;\n                }\n            }\n        }\n        function getInstance() {\n        \n            if(!instance){\n                instance = createInstance();\n            }\n            \n            return instance;\n        }\n        \n        return {\n            getInstance: getInstance\n        } \n    })();\n\n    const one = singlePattern.getInstance();\n    const two = singlePattern.getInstance();\n    console.log(one === two) // true\n    one.setName('yejiawei');\n    console.log(two.getName()); // \"yejiawei\"\n    ",'\n    <button id="addNewObserver">Add New Observer checkbox</button>\n    <input id="mainCheckbox" type="checkbox"/>\n    <div id="observersContainer"></div>\n\n    const controlCheckbox = document.getElementById("mainCheckbox");\n    const addBtn = document.getElementById("addNewObserver");\n    const container = document.getElementById("observersContainer");\n\n    // 要素一：观察者队列，提供增删改查队列的方法\n    const subject = (function() {\n        let instance;\n        function createInstance() {\n            const observerList = [];\n\n            return {\n                addObserver: function( observer ){\n                    observerList.push( observer );\n                },\n                notify: function( context ){\n                    observerList.forEach(observer => {\n                        observer.update(context);\n                    })\n                }\n            }\n        }\n\n        function getInstance() {\n            if(!instance) {\n                instance = createInstance();\n            }\n\n            return instance;\n        }\n\n        return {\n            getInstance: getInstance\n        }\n    })();\n    // 要素二：构建subject\n    controlCheckbox.constructor.prototype = Object.assign(controlCheckbox.constructor.prototype, subject.getInstance())\n    controlCheckbox.onclick = function () {\n        controlCheckbox.notify(controlCheckbox.checked);\n    };\n    // 要素三：observer的扩展接口，用来处理更新功能\n    function Observer(check) {\n        check.update = function (value) {\n            this.checked = value;\n        };\n    }\n    // 要素四：构建observer\n    addBtn.onclick = function () {\n        const check = document.createElement("input");\n        check.type = "checkbox";\n        Observer(check);\n\n        controlCheckbox.addObserver(check);\n        container.appendChild(check);\n    };\n    ','\n    const pubAndsub = (function (){\n        let instance;\n        function createInstance() {\n            const topics = {};\n            let subUid = -1;\n            return {\n                publish: function(topic, args) {\n                    if ( !topics[topic] ) {\n                        return false;\n                    }\n\n                    const subscribers = topics[topic];\n                    let len = subscribers ? subscribers.length : 0;\n                    while (len--) {\n                        subscribers[len].func( topic, args );\n                    }\n                },\n                subscribe: function(topic, func) {\n                    if (!topics[topic]) {\n                        topics[topic] = [];\n                    }\n                    const id = ( ++subUid ).toString()\n                    topics[topic].push({\n                        id,\n                        func: func\n                    });\n                    return id;\n                },\n                unsubscribe: function(id) {\n                    for ( let t in topics ) {\n                        if ( topics[t] ) {\n                            for ( let i = 0, j = topics[t].length; i < j; i++ ) {\n                                if ( topics[t][i].id === id ) {\n                                    topics[t].splice( i, 1 );\n                                    return true;\n                                }\n                            }\n                        }\n                    }\n                    return false;\n                }\n            }\n        }\n        function getInstance() {\n            if(!instance) {\n                instance = createInstance();\n            }\n\n            return instance;\n        }\n\n        return {\n            getInstance: getInstance\n        }\n    })();\n\n    const ps = pubAndsub.getInstance();\n    const psid = ps.subscribe("test", function(topics, data) {\n        console.log( "Logging: " + topics + ": " + data );\n    })\n\n    ps.publish( "test", "hello world!" );\n    ps.unsubscribe( psid );\n    ps.publish( "test", "hello world!" );\n    '],time:"2019-10-01",title:"几种常见的设计模式",items:[{title:"构造函数模式",target:"#constructor"},{divider:!0},{title:"工厂模式",target:"#factory"},{divider:!0},{title:"模块模式",target:"#module"},{divider:!0},{title:"单例模式",target:"#single"},{divider:!0},{title:"观察者模式",target:"#observer"},{divider:!0},{title:"发布/订阅模式式",target:"#subpub"},{divider:!0}]}},mounted:function(){},methods:{}},r=o,c=(e("bc3e"),e("2877")),l=e("6544"),u=e.n(l),d=e("b0af"),v=e("99d9"),b=e("12b2"),p=e("a523"),f=e("ce7e"),h=e("0e8f"),m=e("ce87"),g=e("a722"),_=Object(c["a"])(r,s,i,!1,null,null,null);n["default"]=_.exports;u()(_,{VCard:d["a"],VCardText:v["a"],VCardTitle:b["a"],VContainer:p["a"],VDivider:f["a"],VFlex:h["a"],VHover:m["a"],VLayout:g["a"]})},"390a":function(t,n,e){"use strict";var s=e("ed62"),i=e.n(s);i.a},"695d":function(t,n,e){"use strict";var s=e("b193"),i=e.n(s);i.a},b193:function(t,n,e){},bc3e:function(t,n,e){"use strict";var s=e("16a1"),i=e.n(s);i.a},ce87:function(t,n,e){"use strict";var s=e("163b"),i=e("98a1"),a=e("58df"),o=e("d9bd");n["a"]=Object(a["a"])(s["a"],i["a"]).extend({name:"v-hover",props:{disabled:{type:Boolean,default:!1},value:{type:Boolean,default:void 0}},methods:{onMouseEnter:function(){this.runDelay("open")},onMouseLeave:function(){this.runDelay("close")}},render:function(){if(!this.$scopedSlots.default&&void 0===this.value)return Object(o["b"])("v-hover is missing a default scopedSlot or bound value",this),null;var t=void 0;return this.$scopedSlots.default?t=this.$scopedSlots.default({hover:this.isActive}):this.$slots.default&&1===this.$slots.default.length&&(t=this.$slots.default[0]),Array.isArray(t)&&1===t.length&&(t=t[0]),t&&!Array.isArray(t)&&t.tag?(this.disabled||(t.data=t.data||{},this._g(t.data,{mouseenter:this.onMouseEnter,mouseleave:this.onMouseLeave})),t):(Object(o["b"])("v-hover should only contain a single element",this),t)}})},ed62:function(t,n,e){},fd3f:function(t,n,e){"use strict";var s=function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("v-container",{staticStyle:{padding:"0"},attrs:{fluid:"","fill-height":""}},[e("v-layout",{attrs:{wrap:""}},[e("BlogSubMenu",{attrs:{items:t.items,title:t.title}}),e("v-flex",{attrs:{"xs-12":""}},[e("div",{staticClass:"blogbg"},[e("p",{staticClass:"someword"},[t._v("思绪随时间流逝，逝去的日子不会回来")]),e("div",{staticClass:"msg"},[e("p",[t._v("作者：叶家伟")]),e("p",[t._v("时间："+t._s(t.time))])])]),t._t("default")],2)],1)],1)},i=[],a=function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("v-menu",{attrs:{"close-on-content-click":!1,bottom:"",left:"","min-width":"300","max-width":"300","nudge-left":"12","offset-x":"",transition:"slide-y-transition"}},[e("v-btn",{staticClass:"elevation-0",staticStyle:{top:"96px"},attrs:{slot:"activator",color:"grey",dark:"",fab:"",fixed:"",top:""},slot:"activator"},[e("v-icon",{attrs:{dark:"",color:"white"}},[t._v("list")])],1),e("v-card",{staticStyle:{"border-radius":"5px"}},[e("div",{staticClass:"submenuimg"},[e("p",{staticClass:"title"},[t._v("目录")])]),e("v-card-title",{attrs:{"primary-title":""}},[e("div",[e("h3",{staticClass:"headline mb-0"},[t._v(t._s(t.title))])])]),e("v-list",{staticStyle:{"max-height":"300px",overflow:"auto"}},[t._l(t.items,(function(n,s){return[n.divider?e("v-divider",{key:s}):e("v-list-tile",{key:n.title+"submenu",attrs:{avatar:""},on:{click:function(e){return t.$vuetify.goTo(n.target,t.options)}}},[e("v-list-tile-content",[e("v-list-tile-title",{domProps:{innerHTML:t._s(n.title)}})],1)],1)]}))],2)],1)],1)},o=[],r={props:["items","title"],data:function(){return{options:{duration:300,offset:0,easing:"easeInOutCubic"}}}},c=r,l=(e("390a"),e("2877")),u=e("6544"),d=e.n(u),v=e("8336"),b=e("b0af"),p=e("12b2"),f=e("ce7e"),h=e("132d"),m=e("8860"),g=e("ba95"),_=e("5d23"),y=e("e449"),C=Object(l["a"])(c,a,o,!1,null,null,null),x=C.exports;d()(C,{VBtn:v["a"],VCard:b["a"],VCardTitle:p["a"],VDivider:f["a"],VIcon:h["a"],VList:m["a"],VListTile:g["a"],VListTileContent:_["a"],VListTileTitle:_["b"],VMenu:y["a"]});var k={props:["items","time","title"],components:{BlogSubMenu:x}},w=k,j=(e("695d"),e("a523")),I=e("0e8f"),O=e("a722"),V=Object(l["a"])(w,s,i,!1,null,null,null);n["a"]=V.exports;d()(V,{VContainer:j["a"],VFlex:I["a"],VLayout:O["a"]})}}]);
//# sourceMappingURL=designPattern.76dba406.js.map