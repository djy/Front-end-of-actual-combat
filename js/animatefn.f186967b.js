(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["animatefn"],{"8ba7":function(t,n,e){},a462:function(t,n,e){"use strict";var a=e("8ba7"),i=e.n(a);i.a},fcda:function(t,n,e){"use strict";e.r(n);var a=function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("v-container",{staticStyle:{padding:"0"},attrs:{fluid:"","fill-height":"",id:"animatefn","grid-list-md":""}},[e("Blog",{attrs:{items:t.items,time:t.time,title:t.title}},[e("div",{staticClass:"blogcontent"},[e("v-layout",{attrs:{row:"",wrap:""}},[e("v-flex",{attrs:{xs12:""}},[e("v-hover",{scopedSlots:t._u([{key:"default",fn:function(n){var a=n.hover;return e("v-card",{class:"elevation-"+(a?12:2),attrs:{"min-height":"200"}},[e("v-card-title",[e("h3",{attrs:{id:"animate"}},[t._v("动画事件")])]),e("v-divider"),e("v-card-text",[e("p",{staticClass:"body-1"},[t._v("可以通过动画执行阶段的事件，控制动画执行效果"),e("v-btn",{ref:"btn",attrs:{outline:"",small:""}},[t._v("开始")])],1),e("div",{staticStyle:{height:"100px"}},[e("div",{staticClass:"box",attrs:{id:"box"}})]),e("v-flex",{attrs:{xs12:""}},[e("v-tabs",{attrs:{color:"light-green darken-1",dark:"","slider-color":"yellow"}},[e("v-tab",{key:"js",attrs:{ripple:""}},[t._v("JAVASCRIPT")]),e("v-tab",{key:"html",attrs:{ripple:""}},[t._v("HTML")]),e("v-tab",{key:"css",attrs:{ripple:""}},[t._v("CSS")]),e("v-tab-item",{key:"js"},[e("v-card",{attrs:{flat:""}},[e("v-card-text",[e("pre",{staticClass:"code"},[t._v(t._s(t.pres[0]))])])],1)],1),e("v-tab-item",{key:"html"},[e("v-card",{attrs:{flat:""}},[e("v-card-text",[e("pre",{staticClass:"code"},[t._v(t._s(t.pres[1]))])])],1)],1),e("v-tab-item",{key:"css"},[e("v-card",{attrs:{flat:""}},[e("v-card-text",[e("pre",{staticClass:"code"},[t._v(t._s(t.pres[2]))])])],1)],1)],1)],1)],1)],1)}}])})],1),e("v-flex",{attrs:{xs12:""}},[e("v-hover",{scopedSlots:t._u([{key:"default",fn:function(n){var a=n.hover;return e("v-card",{class:"elevation-"+(a?12:2),attrs:{"min-height":"200"}},[e("v-card-title",[e("h3",{attrs:{id:"js_animate"}},[t._v("使用js控制元素动画")])]),e("v-divider"),e("v-card-text",[e("p",{staticClass:"body-1"},[t._v("可以使用js直接定义元素动画，不需要设置css")]),e("div",{staticStyle:{height:"100px"}},[e("div",{staticClass:"box1",attrs:{id:"box1"}})]),e("v-flex",{attrs:{xs12:""}},[e("v-tabs",{attrs:{color:"light-green darken-1",dark:"","slider-color":"yellow"}},[e("v-tab",{key:"js",attrs:{ripple:""}},[t._v("JAVASCRIPT")]),e("v-tab",{key:"html",attrs:{ripple:""}},[t._v("HTML")]),e("v-tab",{key:"css",attrs:{ripple:""}},[t._v("CSS")]),e("v-tab-item",{key:"js"},[e("v-card",{attrs:{flat:""}},[e("v-card-text",[e("pre",{staticClass:"code"},[t._v(t._s(t.pres[3]))])])],1)],1),e("v-tab-item",{key:"html"},[e("v-card",{attrs:{flat:""}},[e("v-card-text",[e("pre",{staticClass:"code"},[t._v(t._s(t.pres[4]))])])],1)],1),e("v-tab-item",{key:"css"},[e("v-card",{attrs:{flat:""}},[e("v-card-text",[e("pre",{staticClass:"code"},[t._v(t._s(t.pres[5]))])])],1)],1)],1)],1)],1)],1)}}])})],1),e("v-flex",{attrs:{xs12:""}},[e("v-hover",{scopedSlots:t._u([{key:"default",fn:function(n){var a=n.hover;return e("v-card",{class:"elevation-"+(a?12:2),attrs:{"min-height":"200"}},[e("v-card-title",[e("h3",{attrs:{id:"transition"}},[t._v("过渡事件")])]),e("v-divider"),e("v-card-text",[e("p",{staticClass:"body-1"},[t._v("可以通过过渡执行阶段的事件，获取过渡执行状态")]),e("div",{staticStyle:{height:"200px"}},[e("div",{staticClass:"box2",attrs:{id:"box2"}})]),e("v-flex",{attrs:{xs12:""}},[e("v-tabs",{attrs:{color:"light-green darken-1",dark:"","slider-color":"yellow"}},[e("v-tab",{key:"js",attrs:{ripple:""}},[t._v("JAVASCRIPT")]),e("v-tab",{key:"html",attrs:{ripple:""}},[t._v("HTML")]),e("v-tab",{key:"css",attrs:{ripple:""}},[t._v("CSS")]),e("v-tab-item",{key:"js"},[e("v-card",{attrs:{flat:""}},[e("v-card-text",[e("pre",{staticClass:"code"},[t._v(t._s(t.pres[6]))])])],1)],1),e("v-tab-item",{key:"html"},[e("v-card",{attrs:{flat:""}},[e("v-card-text",[e("pre",{staticClass:"code"},[t._v(t._s(t.pres[7]))])])],1)],1),e("v-tab-item",{key:"css"},[e("v-card",{attrs:{flat:""}},[e("v-card-text",[e("pre",{staticClass:"code"},[t._v(t._s(t.pres[8]))])])],1)],1)],1)],1)],1)],1)}}])})],1)],1)],1)])],1)},i=[],s=e("fd3f"),r={components:{Blog:s["a"]},data:function(){return{rect:null,time:"2019-4-26",title:"动画和过渡事件",items:[{title:"动画事件",target:"#animate"},{divider:!0},{title:"使用js控制元素动画",target:"#js_animate"},{divider:!0},{title:"过渡事件",target:"#transition"},{divider:!0}],pres:["\n    const box = document.getElementById('box');\n    let count = 1;\n\n    // 动画开始执行\n    box.addEventListener('animationstart', (e) => {\n        console.log(e)\n    })\n\n    // 一次动画执行完了会触发此事件，最后一次结束不会触发\n    box.addEventListener('animationiteration', () => { \n        console.log(count);\n        count++;\n        if(count === 2) {\n            box.style.animationName = 'moveY';\n            box.style.animationDuration = '3s';\n        } else if(count === 3) {\n            box.style.animationName = 'moveX';\n            box.style.animationDuration = '3s';\n            box.style.animationIterationCount = '1';\n        }\n    });\n\n    // 动画结束执行\n    box.addEventListener('animationend', (e) => {\n        console.log(e);\n    })\n\n    document.getElementById('btn').addEventListener('click', function(e) {\n        box.style.animationName = 'moveX';\n        box.style.animationDuration = '3s';\n        box.style.animationIterationCount = '3';\n        this.style.display = 'none';\n    })\n",'\n    <div id="box"></div>\n    <button type="button" id="btn">开始</button>\n',"\n    @keyframes moveX {\n        0% { transform: translateX(0)}\n        100% { transform: translateX(300px)}\n    }\n    @keyframes moveY {\n        0% { transform: translateY(0)}\n        100% { transform: translateY(300px)}\n    }\n    #box{\n        width: 100px;\n        height: 100px;\n        background-color: aquamarine;\n    }\n","\n    /**\n     * keyframe有如下几种声明方式\n     * 指定某个属性动画开始和结束的css\n     * const kf = [ \n     *      { backgroundColor: \"antiquewhite\" }, \n     *      { backgroundColor: \"brown\" }\n     * ];\n     * 指定偏移值\n     * const kf = [\n     *      { backgroundColor: \"antiquewhite\" },\n     *      { backgroundColor: \"brown\", offset: 0.7 },\n     *      { backgroundColor: \"red\" }\n     * ];\n     * 指定属性的变化函数\n     * const kf = [\n     *      { left: '0px', easing: 'ease-in' },\n     *      { left: '300px', easing: 'ease-out' }\n     * ]\n    */\n    \n    const kf = {\n        backgroundColor: ['antiquewhite', 'brown'],\n        left: ['0px', '300px'],\n        easing: [ 'ease-in', 'ease-out' ]\n    }\n    // 直接传入动画执行时间即可执行动画\n    // const am = box.animate(kf, 3000); \n\n    // 你可以传入对象，提供更加细粒度的动画控制\n    const am = box.animate(kf, {\n        id: 'animate',\n        delay: 1000, // 延迟\n        duration: 2000, // 动画执行时间\n        iterations: Infinity,\n        direction: 'alternate',\n        /**\n         * normal 从头开始\n         * reverse 反向开始\n         * alternate 从头开始，动画结束然后反向执行\n         * alternate-reverse 反向开始，动画结束然后反向执行\n        */\n        easing: 'ease-in-out',\n        /**\n         * linear 线性\n         * ease-in 由慢到快\n         * ease-out 由快到慢\n         * ease-in-out 由慢到快再到慢\n        */\n    });\n",'\n    <div id="box"></div>\n',"\n    #box{\n        width: 100px;\n        height: 100px;\n        background-color: antiquewhite;\n        position: relative;\n        left: 0;\n    }\n","\n    const box = document.getElementById('box');\n    box.addEventListener('transitionrun', e => {\n        box.innerText = \"动画开始执行\";\n    })\n    box.addEventListener('transitionend', e => {\n        box.innerText = \"动画执行结束\";\n    })\n",'\n    <div id="box"></div>\n',"\n    #box{\n        background-color: azure;\n        width: 100px;\n        height: 100px;\n        transition: all 2s;\n        padding: 10px;\n        box-sizing: border-box;\n        font-size: 12px;\n        color: gray;\n    }\n    #box:hover{\n        background-color: brown;\n        width: 200px;\n        height: 200px;\n    }\n"]}},mounted:function(){var t=document.getElementById("box"),n=document.getElementById("box1"),e=1;t.addEventListener("animationiteration",function(){e++,2===e?(t.style.animationName="moveY",t.style.animationDuration="3s"):3===e&&(t.style.animationName="moveX",t.style.animationDuration="3s",t.style.animationIterationCount="1")}),this.$refs.btn.$el.addEventListener("click",function(n){t.style.animationName="moveX",t.style.animationDuration="3s",t.style.animationIterationCount="3",this.style.display="none"});var a={backgroundColor:["antiquewhite","brown"],left:["0px","300px"],easing:["ease-in","ease-out"]},i=(n.animate(a,{id:"animate",delay:1e3,duration:2e3,iterations:1/0,direction:"alternate",easing:"ease-in-out"}),document.getElementById("box2"));i.addEventListener("transitionrun",function(t){i.innerText="动画开始执行"}),i.addEventListener("transitionend",function(t){i.innerText="动画执行结束"})},methods:{},destroyed:function(){}},o=r,l=(e("a462"),e("2877")),d=e("6544"),c=e.n(d),v=e("8336"),b=e("b0af"),m=e("99d9"),u=e("12b2"),x=e("a523"),p=e("ce7e"),f=e("0e8f"),y=e("ce87"),h=e("a722"),g=e("71a3"),k=e("c671"),_=e("fe57"),C=Object(l["a"])(o,a,i,!1,null,null,null);n["default"]=C.exports;c()(C,{VBtn:v["a"],VCard:b["a"],VCardText:m["a"],VCardTitle:u["a"],VContainer:x["a"],VDivider:p["a"],VFlex:f["a"],VHover:y["a"],VLayout:h["a"],VTab:g["a"],VTabItem:k["a"],VTabs:_["a"]})}}]);
//# sourceMappingURL=animatefn.f186967b.js.map