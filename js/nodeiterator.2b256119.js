(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["nodeiterator"],{"0b77":function(t,e,n){"use strict";n.r(e);var a=function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("v-container",{staticStyle:{padding:"0"},attrs:{fluid:"","fill-height":"",id:"nodeiterator","grid-list-md":""}},[n("Blog",{attrs:{items:t.items,time:t.time,title:t.title}},[n("div",{staticClass:"blogcontent"},[n("v-layout",{attrs:{row:"",wrap:""}},[n("v-flex",{attrs:{xs12:""}},[n("v-hover",{scopedSlots:t._u([{key:"default",fn:function(e){var a=e.hover;return n("v-card",{class:"elevation-"+(a?12:2),attrs:{"min-height":"200"}},[n("v-card-title",[n("h3",{attrs:{id:"node"}},[t._v("创建NodeIterator遍历")])]),n("v-divider"),n("v-card-text",[n("v-layout",{attrs:{row:"",wrap:""}},[n("v-flex",{attrs:{xs12:""}},[n("pre",{staticClass:"code"},[t._v(t._s(t.pres[0]))])])],1)],1)],1)}}])})],1),n("v-flex",{attrs:{xs12:""}},[n("v-hover",{scopedSlots:t._u([{key:"default",fn:function(e){var a=e.hover;return n("v-card",{class:"elevation-"+(a?12:2),attrs:{"min-height":"200"}},[n("v-card-title",[n("h3",{attrs:{id:"walker"}},[t._v("创建TreeWalker遍历")])]),n("v-divider"),n("v-card-text",[n("v-layout",{attrs:{row:"",wrap:""}},[n("v-flex",{attrs:{xs12:""}},[n("pre",{staticClass:"code"},[t._v(t._s(t.pres[1]))])])],1)],1)],1)}}])})],1)],1)],1)])],1)},r=[],i=n("fd3f"),o={components:{Blog:i["a"]},data:function(){return{time:"2019-3-5",title:"Dom节点遍历器",items:[{title:"创建NodeIterator遍历",target:"#node"},{divider:!0},{title:"创建TreeWalker遍历",target:"#walker"},{divider:!0}],pres:["\n    // 下面这段代码实现功能是过滤出所有的p\n\n    const box = document.querySelector('#box');\n    const ci = document.createNodeIterator(\n        box, // 根节点\n        NodeFilter.SHOW_ELEMENT + NodeFilter.SHOW_COMMENT, // 表示什么类型的节点将被筛选出来，也就是Iterator初始节点集合\n        /**\n         * NodeFilter包含的其他属性如下\n         * \n         * 1. SHOW_ALL 所有节点\n         * 2. SHOW_COMMENT 所有注释节点\n         * 3. SHOW_DOCUMENT 所有document节点\n         * 4. SHOW_ELEMENT 所有元素节点\n         * 5. SHOW_TEXT 所有文本节点\n        */\n        { \n            acceptNode: function(node) { // 定义过滤函数，会在初始集合中的每一个节点调用\n                if(node.nodeName === 'P'){\n                    return NodeFilter.FILTER_ACCEPT; // 接受此节点\n                } else if (node.hasChildNodes()) { // 如果此节点有孩子节点\n                    return NodeFilter.FILTER_SKIP; // 过滤此节点本身，但是其子节点不过滤\n                } else {\n                    return NodeFilter.FILTER_REJECT; // 过滤掉这个节点和它的子节点\n                }\n            } \n        }\n    );\n\n    let node = ci.nextNode(); // 下一个节点\n    while(node) {\n        console.log(node);\n        node = ci.nextNode();\n    }\n\n    // ci.previousNode(); 上一个节点\n","\n    // TreeWalker的作用和使用方式和NodeIterator几乎一模一样，只不过TreeWalker提供了一些更细粒度的节点访问方法\n\n    const box = document.querySelector('#box');\n    const treeWalker = document.createTreeWalker(\n        box, // 根节点\n        NodeFilter.SHOW_ELEMENT,\n        { \n            acceptNode: function(node) { \n                return NodeFilter.FILTER_ACCEPT;\n            } \n        }\n    );\n\n    // 遍历每一个节点\n    let node = treeWalker.nextNode();\n    while(node) {\n        console.log(treeWalker.currentNode);\n        node = treeWalker.nextNode();\n    }\n\n    // 调用这些方法都会移动遍历指针到当前位置\n    // treeWalker.firstChild(); 第一个孩子节点\n    // treeWalker.lastChild(); 最后一个孩子节点\n    // treeWalker.nextSibling(); 下一个兄弟节点\n    // treeWalker.parentNode(); 父节点\n    // treeWalker.nextNode(); 下一个节点\n    // treeWalker.previousNode(); 上一个节点\n    // treeWalker.previousSibling(); 上一个兄弟节点\n"]}},mounted:function(){},methods:{}},s=o,l=(n("fc49"),n("2877")),d=n("6544"),c=n.n(d),u=n("b0af"),v=n("99d9"),f=n("12b2"),h=n("a523"),p=n("ce7e"),m=n("0e8f"),b=n("ce87"),x=n("a722"),_=Object(l["a"])(s,a,r,!1,null,null,null);e["default"]=_.exports;c()(_,{VCard:u["a"],VCardText:v["a"],VCardTitle:f["a"],VContainer:h["a"],VDivider:p["a"],VFlex:m["a"],VHover:b["a"],VLayout:x["a"]})},"210c":function(t,e,n){},"390a":function(t,e,n){"use strict";var a=n("5545"),r=n.n(a);r.a},5545:function(t,e,n){},"695d":function(t,e,n){"use strict";var a=n("8f13"),r=n.n(a);r.a},"8f13":function(t,e,n){},ce87:function(t,e,n){"use strict";var a=n("163b"),r=n("98a1"),i=n("58df"),o=n("d9bd");e["a"]=Object(i["a"])(a["a"],r["a"]).extend({name:"v-hover",props:{disabled:{type:Boolean,default:!1},value:{type:Boolean,default:void 0}},methods:{onMouseEnter:function(){this.runDelay("open")},onMouseLeave:function(){this.runDelay("close")}},render:function(){if(!this.$scopedSlots.default&&void 0===this.value)return Object(o["b"])("v-hover is missing a default scopedSlot or bound value",this),null;var t=void 0;return this.$scopedSlots.default?t=this.$scopedSlots.default({hover:this.isActive}):this.$slots.default&&1===this.$slots.default.length&&(t=this.$slots.default[0]),Array.isArray(t)&&1===t.length&&(t=t[0]),t&&!Array.isArray(t)&&t.tag?(this.disabled||(t.data=t.data||{},this._g(t.data,{mouseenter:this.onMouseEnter,mouseleave:this.onMouseLeave})),t):(Object(o["b"])("v-hover should only contain a single element",this),t)}})},fc49:function(t,e,n){"use strict";var a=n("210c"),r=n.n(a);r.a},fd3f:function(t,e,n){"use strict";var a=function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("v-container",{staticStyle:{padding:"0"},attrs:{fluid:"","fill-height":""}},[n("v-layout",{attrs:{wrap:""}},[n("BlogSubMenu",{attrs:{items:t.items,title:t.title}}),n("v-flex",{attrs:{"xs-12":""}},[n("div",{staticClass:"blogbg"},[n("p",{staticClass:"someword"},[t._v("思绪随时间流逝，逝去的日子不会回来")]),n("div",{staticClass:"msg"},[n("p",[t._v("作者：叶家伟")]),n("p",[t._v("时间："+t._s(t.time))])])]),t._t("default")],2)],1)],1)},r=[],i=function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("v-menu",{attrs:{"close-on-content-click":!1,bottom:"",left:"","min-width":"300","max-width":"300","nudge-left":"12","offset-x":"",transition:"slide-y-transition"}},[n("v-btn",{staticClass:"elevation-0",staticStyle:{top:"96px"},attrs:{slot:"activator",color:"grey",dark:"",fab:"",fixed:"",top:""},slot:"activator"},[n("v-icon",{attrs:{dark:"",color:"white"}},[t._v("list")])],1),n("v-card",{staticStyle:{"border-radius":"5px"}},[n("div",{staticClass:"submenuimg"},[n("p",{staticClass:"title"},[t._v("目录")])]),n("v-card-title",{attrs:{"primary-title":""}},[n("div",[n("h3",{staticClass:"headline mb-0"},[t._v(t._s(t.title))])])]),n("v-list",{staticStyle:{"max-height":"300px",overflow:"auto"}},[t._l(t.items,function(e,a){return[e.divider?n("v-divider",{key:a}):n("v-list-tile",{key:e.title+"submenu",attrs:{avatar:""},on:{click:function(n){return t.$vuetify.goTo(e.target,t.options)}}},[n("v-list-tile-content",[n("v-list-tile-title",{domProps:{innerHTML:t._s(e.title)}})],1)],1)]})],2)],1)],1)},o=[],s={props:["items","title"],data:function(){return{options:{duration:300,offset:0,easing:"easeInOutCubic"}}}},l=s,d=(n("390a"),n("2877")),c=n("6544"),u=n.n(c),v=n("8336"),f=n("b0af"),h=n("12b2"),p=n("ce7e"),m=n("132d"),b=n("8860"),x=n("ba95"),_=n("5d23"),g=n("e449"),N=Object(d["a"])(l,i,o,!1,null,null,null),y=N.exports;u()(N,{VBtn:v["a"],VCard:f["a"],VCardTitle:h["a"],VDivider:p["a"],VIcon:m["a"],VList:b["a"],VListTile:x["a"],VListTileContent:_["a"],VListTileTitle:_["b"],VMenu:g["a"]});var C={props:["items","time","title"],components:{BlogSubMenu:y}},T=C,k=(n("695d"),n("a523")),E=n("0e8f"),S=n("a722"),W=Object(d["a"])(T,a,r,!1,null,null,null);e["a"]=W.exports;u()(W,{VContainer:k["a"],VFlex:E["a"],VLayout:S["a"]})}}]);
//# sourceMappingURL=nodeiterator.2b256119.js.map