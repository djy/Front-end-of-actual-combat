(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["bar"],{

/***/ "hvxR":
/*!***************************!*\
  !*** ./src/bar/index.css ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../../node_modules/css-loader/dist/cjs.js!./index.css */ "sARE");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../../node_modules/style-loader/lib/addStyles.js */ "aET+")(content, options);

if(content.locals) module.exports = content.locals;

if(true) {
	module.hot.accept(/*! !../../node_modules/css-loader/dist/cjs.js!./index.css */ "sARE", function() {
		var newContent = __webpack_require__(/*! !../../node_modules/css-loader/dist/cjs.js!./index.css */ "sARE");

		if(typeof newContent === 'string') newContent = [[module.i, newContent, '']];

		var locals = (function(a, b) {
			var key, idx = 0;

			for(key in a) {
				if(!b || a[key] !== b[key]) return false;
				idx++;
			}

			for(key in b) idx--;

			return idx === 0;
		}(content.locals, newContent.locals));

		if(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');

		update(newContent);
	});

	module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ "sARE":
/*!*****************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./src/bar/index.css ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/api.js */ "JPst")(false);
// Module
exports.push([module.i, ".chart {\n    background:rgba(37,39,46,1);\n}\n\n.chart text {\n    fill: white;\n    font: 10px sans-serif;\n    text-anchor: end;\n}\n\n.chart .axis text {\n    font: 10px sans-serif;\n}\n\n.chart .axis path, .chart .axis line {\n    fill: none;\n    stroke: white;\n    shape-rendering: crispEdges;\n}\n\n.node {\n    fill: none;\n    stroke: none;\n    /* stroke: #ccc;\n    shape-rendering: crispEdges; */\n}\n\n.point--selected {\n    fill: red;\n    fill-opacity: 1;\n    stroke: red;\n    stroke-width: 5px;\n}\n\n.chart .title, .chart .content {\n    text-anchor: middle;\n    text-shadow: 0 1px 0 #fff, 1px 0 0 #fff, 0 -1px 0 #fff, -1px 0 0 #fff;\n}", ""]);


/***/ }),

/***/ "vIa5":
/*!**************************!*\
  !*** ./src/bar/index.ts ***!
  \**************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3 */ "VphZ");
/* harmony import */ var _index_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index.css */ "hvxR");
/* harmony import */ var _index_css__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_index_css__WEBPACK_IMPORTED_MODULE_1__);


document.body.innerHTML = '';
const config = {
    chartWidth: 600,
    chartHeight: 300,
    chartMarginL: 50,
    chartMarginR: 50,
    chartMarginT: 50,
    chartMarginB: 50,
};
const lineChart = (Config, ChartData, XData) => {
    const color = d3__WEBPACK_IMPORTED_MODULE_0__["hsl"]('#fea');
    const svg = generateSvg();
    const x = generateX();
    const y = generateY();
    configX();
    configY();
    const rects = generateRects();
    const tooltip = tooltipInfo();
    handleInteractive();
    // 配置svg
    function generateSvg() {
        return d3__WEBPACK_IMPORTED_MODULE_0__["select"]('body')
            .append('svg')
            .attr('fill', 'none')
            .attr('stroke-linejoin', 'round')
            .attr('stroke-linecap', 'round')
            .attr('class', 'chart')
            .style('width', Config.chartWidth)
            .style('height', Config.chartHeight);
    }
    // 生成x轴配置
    function generateX() {
        return d3__WEBPACK_IMPORTED_MODULE_0__["scaleLinear"]()
            .domain([0, XData.length])
            .range([0, Config.chartWidth - Config.chartMarginR - Config.chartMarginL]);
    }
    // 生成y轴配置
    function generateY() {
        return d3__WEBPACK_IMPORTED_MODULE_0__["scaleLinear"]()
            .domain([0, 1.1 * d3__WEBPACK_IMPORTED_MODULE_0__["max"](ChartData, (d) => d.value)]) // 适当做个缩放，让图看起来更自然
            .range([Config.chartHeight - Config.chartMarginT - Config.chartMarginB, 0]);
    }
    // 配置x轴
    function configX() {
        const xg = svg
            .append('g')
            .attr('class', 'x axis')
            .attr('transform', `translate(${Config.chartMarginL}, ${Config.chartHeight - Config.chartMarginB})`);
        d3__WEBPACK_IMPORTED_MODULE_0__["axisBottom"](x)
            .ticks(5)
            .tickSize(0)
            .tickPadding(8)
            .tickFormat(((d) => {
            return XData[d];
        }))(xg);
        xg.selectAll('.tick text').attr('dx', 40);
    }
    // 配置y轴
    function configY() {
        const formate = d3__WEBPACK_IMPORTED_MODULE_0__["format"]('.' + d3__WEBPACK_IMPORTED_MODULE_0__["precisionFixed"](0.1) + 'f');
        const yg = svg
            .append('g')
            .attr('class', 'y axis')
            .attr('transform', `translate(${Config.chartMarginT}, ${Config.chartMarginL})`);
        d3__WEBPACK_IMPORTED_MODULE_0__["axisRight"](y)
            .ticks(10, formate)
            .tickSizeInner(Config.chartWidth - Config.chartMarginR - Config.chartMarginL)
            .tickPadding(8)(yg);
        // 移除y轴的竖线
        yg.select('.domain').remove();
        // 对y轴tick中的line设置线的样式
        yg.selectAll('.tick:not(:first-of-type) line')
            .attr('stroke-opacity', 0.5)
            .attr('stroke-dasharray', '2,2');
        // 设置y轴的文字的位置
        yg.selectAll('.tick text').attr('x', -2).attr('dy', -4);
    }
    // 生成柱状矩形图
    function generateRects() {
        // 绘制柱状矩形
        // let dynamicColor: string = '';
        return svg.append('g')
            .selectAll('rect')
            .data(ChartData)
            .enter()
            .append('rect')
            .style('fill', color.toString())
            .attr('x', (d, i) => Config.chartMarginL + x(i))
            .attr('y', (d) => Config.chartMarginT + y(d.value))
            .attr('height', (d) => Config.chartHeight - Config.chartMarginT - Config.chartMarginB - y(d.value))
            .attr('width', (d) => x(1) - 1);
        // .on('mouseover', function(data) {
        //     if (this.style.fill) { dynamicColor = this.style.fill; }
        //     d3.select(this).style('fill', '#3c763d');
        // })
        // .on('mouseout', function(data) {
        //     d3.select(this).style('fill', dynamicColor);
        // });
    }
    // 处理提示信息
    function tooltipInfo() {
        const tt = svg.append('g')
            .attr('transform', 'translate(-100,-100)')
            .attr('class', 'focus');
        tt.append('text')
            .attr('class', 'title')
            .attr('y', -20);
        tt.append('text')
            .attr('class', 'content')
            .attr('y', -10);
        return tt;
    }
    // 处理交互操作
    function handleInteractive() {
        // 我们采用的是quadtree，这是d3内置的算法，用来获取鼠标最近点
        const rectPoint = [];
        ChartData.map((d, i) => {
            // 这一步是，获取每一个矩形图的顶边的中点坐标
            // 至于为啥获取中点，这是本人自己多次尝试，发现这个点算出来的结果会使交互起来更自然
            rectPoint.push([Config.chartMarginL + x(i) + (x(1) - 1) / 2, Config.chartMarginT + y(d.value)]);
        });
        const quadtree = d3__WEBPACK_IMPORTED_MODULE_0__["quadtree"]()
            .extent([[Config.chartMarginL, Config.chartMarginT], [Config.chartWidth - Config.chartMarginL, Config.chartHeight - Config.chartMarginB]])
            .addAll(rectPoint);
        // 通过quadtree计算出每一个中点的的上界和下界
        const nodes = [];
        quadtree.visit((node, x0, y0, x1, y1) => {
            node.x0 = x0;
            node.y0 = y0;
            node.x1 = x1;
            node.y1 = y1;
            nodes.push(node);
        });
        // 将计算出的数据，在svg中绘制成虚拟的rect
        svg.selectAll('.node')
            .data(nodes)
            .enter()
            .append('rect')
            .attr('class', 'node')
            .attr('x', (d) => d.x0)
            .attr('y', (d) => d.y0)
            .attr('width', (d) => d.y1 - d.y0)
            .attr('height', (d) => d.x1 - d.x0);
        // 监听鼠标移动事件
        svg.on('mousemove', function () {
            // mouse可以直接获取鼠标当前坐标
            const m = d3__WEBPACK_IMPORTED_MODULE_0__["mouse"](this);
            // 通过quadtree直接找到鼠标坐标对应的原始中点坐标
            const p = quadtree.find(m[0], m[1]);
            rects.style('fill', (d, i) => {
                if (
                // 对比中点坐标
                (Config.chartMarginL + x(i) + (x(1) - 1) / 2) === p[0] &&
                    (Config.chartMarginT + y(d.value)) === p[1]) {
                    tooltip
                        .transition()
                        .duration(200)
                        .ease(d3__WEBPACK_IMPORTED_MODULE_0__["easeLinear"])
                        .attr('transform', `translate(${Config.chartMarginL + x(i) + (x(1) - 1) / 2}, ${Config.chartMarginT + y(d.value)})`);
                    tooltip
                        .select('text.title')
                        .text('充电方式偏好人群');
                    tooltip
                        .select('text.content')
                        .text(d.key + ': ' + d.value + '人');
                    return color.brighter(0.7).toString();
                }
                else {
                    return color.toString();
                }
            });
        });
    }
};
// 这个图是我根据实际业务场景，模拟的数据处理逻辑，和d3图无关
const generateKey = (item) => {
    let key = '';
    switch (item.split('-')[1]) {
        case '0':
            key = '电充90';
            break;
        case '10':
            key = '电充80';
            break;
        case '20':
            key = '电充70';
            break;
        case '30':
            key = '电充60';
            break;
        case '40':
            key = '电充50';
            break;
        case '50':
            key = '车充50';
            break;
        case '60':
            key = '车充60';
            break;
        case '70':
            key = '车充70';
            break;
        case '80':
            key = '车充80';
            break;
        case '90':
            key = '车充90';
            break;
    }
    return key;
};
d3__WEBPACK_IMPORTED_MODULE_0__["json"]('./static/bar.json').then((data) => {
    // 这部分逻辑是实际业务处理的逻辑，和d3图无关
    const d = [];
    const xData = [];
    for (const key in data.list) {
        if (data.list.hasOwnProperty(key)) {
            const element = data.list[key];
            const tmpKey = generateKey(key);
            d.push({
                key: generateKey(key),
                value: Number(element),
            });
            xData.push(tmpKey);
        }
    }
    // 你只需要关注处理后的最终结果
    // 绘制图的主逻辑
    lineChart(config, d, xData);
});
/* harmony default export */ __webpack_exports__["default"] = ({});


/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,