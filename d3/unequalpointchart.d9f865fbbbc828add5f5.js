(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["unequalpointchart"],{

/***/ "i9iq":
/*!*******************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./src/unequalpointchart/index.css ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/api.js */ "JPst")(false);
// Module
exports.push([module.i, ".chart {\n    background:rgba(37,39,46,1);\n}\n\n.chart text{\n    fill: white;\n    font: 10px sans-serif;\n    text-anchor: end;\n}\n\n\n.chart .axis text {\n    font: 10px sans-serif;\n}\n\n.chart .axis path, .chart .axis line {\n    fill: none;\n    stroke: white;\n    shape-rendering: crispEdges;\n}\n\n.zoom {\n    cursor: move;\n    fill: none;\n    pointer-events: all;\n}\n\n.hoverFocus text {\n    fill: white;\n    \n} \n\n.hoverFocus text.content{\n    text-anchor: start !important;\n}\n\n", ""]);


/***/ }),

/***/ "ihsf":
/*!*****************************************!*\
  !*** ./src/unequalpointchart/index.css ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../../node_modules/css-loader/dist/cjs.js!./index.css */ "i9iq");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../../node_modules/style-loader/lib/addStyles.js */ "aET+")(content, options);

if(content.locals) module.exports = content.locals;

if(true) {
	module.hot.accept(/*! !../../node_modules/css-loader/dist/cjs.js!./index.css */ "i9iq", function() {
		var newContent = __webpack_require__(/*! !../../node_modules/css-loader/dist/cjs.js!./index.css */ "i9iq");

		if(typeof newContent === 'string') newContent = [[module.i, newContent, '']];

		var locals = (function(a, b) {
			var key, idx = 0;

			for(key in a) {
				if(!b || a[key] !== b[key]) return false;
				idx++;
			}

			for(key in b) idx--;

			return idx === 0;
		}(content.locals, newContent.locals));

		if(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');

		update(newContent);
	});

	module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ "jpaf":
/*!****************************************!*\
  !*** ./src/unequalpointchart/index.ts ***!
  \****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3 */ "VphZ");
/* harmony import */ var _index_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index.css */ "ihsf");
/* harmony import */ var _index_css__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_index_css__WEBPACK_IMPORTED_MODULE_1__);


document.body.innerHTML = '';
const config = {
    chartWidth: 1200,
    chartHeight: 500,
    chartMarginL: 50,
    chartMarginR: 50,
    chartMarginT: 50,
    chartMarginB: 50,
};
d3__WEBPACK_IMPORTED_MODULE_0__["json"]('./static/unequalpoint.json').then((res) => {
    const data = res.list;
    const x = d3__WEBPACK_IMPORTED_MODULE_0__["scaleLinear"]().range([config.chartWidth - config.chartMarginL - config.chartMarginR, 0]);
    const y = d3__WEBPACK_IMPORTED_MODULE_0__["scaleLinear"]().domain([0, 600]).range([config.chartHeight - config.chartMarginT - config.chartMarginB, 0]);
    const ydata = [0, 50, 100, 150, 200, 250, 300, 350, 400, 450, 500, 550, 600];
    let tooltip = null;
    const xMax = Number(data[data.length - 1].month) / 3;
    x.domain([xMax, 0]);
    let xTicksMount;
    if (xMax >= 10) {
        xTicksMount = 10;
    }
    else if (xMax < 10 && xMax >= 5) {
        xTicksMount = 5;
    }
    else {
        const tmp = [];
        for (let i = 0; i <= xMax; i++) {
            tmp.push(i);
        }
        xTicksMount = tmp;
    }
    const svg = d3__WEBPACK_IMPORTED_MODULE_0__["select"]('body')
        .append('svg')
        .attr('fill', 'none')
        .attr('stroke-linejoin', 'round')
        .attr('stroke-linecap', 'round')
        .attr('class', 'chart')
        .style('width', config.chartWidth)
        .style('height', config.chartHeight);
    generateX();
    generateY();
    drawPoint(preprocessingData(1000));
    drawToolTip();
    function generateX() {
        // 定义x坐标轴
        const xg = d3__WEBPACK_IMPORTED_MODULE_0__["select"]('svg')
            .append('g')
            .attr('class', 'x axis')
            .attr('transform', `translate(${config.chartMarginL}, ${config.chartHeight - config.chartMarginB})`);
        const xAxis = d3__WEBPACK_IMPORTED_MODULE_0__["axisTop"](x)
            .tickSizeInner(config.chartHeight - config.chartMarginT - config.chartMarginB)
            .tickPadding(8)
            .tickFormat(((value) => {
            return 3 * value + '个月';
        }));
        if (xTicksMount instanceof Array) {
            xAxis.tickValues(xTicksMount);
        }
        else {
            xAxis.ticks(10);
        }
        xAxis(xg);
        // 移除x轴的竖线
        xg.select('.domain').remove();
        // 对y轴tick中的line设置线的样式
        xg.selectAll('.tick line')
            .attr('stroke-opacity', 0.5)
            .attr('stroke-dasharray', '2,2');
        // 设置y轴的文字的位置
        xg
            .selectAll('.tick text')
            .attr('y', 15)
            .attr('x', 25)
            .attr('dx', 0)
            .attr('transform', 'rotate(45)');
    }
    function generateY() {
        // 定义y坐标轴
        const yg = d3__WEBPACK_IMPORTED_MODULE_0__["select"]('svg')
            .append('g')
            .attr('class', 'y axis')
            .attr('transform', `translate(${config.chartMarginT}, ${config.chartMarginL})`);
        const yAxis = d3__WEBPACK_IMPORTED_MODULE_0__["axisRight"](y)
            .tickValues(ydata)
            .tickSizeInner(config.chartWidth - config.chartMarginL - config.chartMarginR)
            .tickPadding(8)
            .tickFormat(((value) => {
            return value + '次';
        }));
        yAxis(yg);
        // 移除y轴的竖线
        yg.select('.domain').remove();
        // // 对y轴tick中的line设置线的样式
        yg.selectAll('.tick line')
            .attr('stroke-opacity', 0.5)
            .attr('stroke-dasharray', '2,2');
        // // 设置y轴的文字的位置
        yg.selectAll('.tick text').attr('x', -5);
    }
    function preprocessingData(max) {
        const size = d3__WEBPACK_IMPORTED_MODULE_0__["scaleLinear"]().range([0, max]);
        const tmpA = [];
        data.forEach((item) => {
            const tt = [];
            ydata.forEach((d) => {
                tt.push(Number(item[`num-${d}`]));
            });
            size.domain([0, d3__WEBPACK_IMPORTED_MODULE_0__["max"](tt)]);
            const tsum = d3__WEBPACK_IMPORTED_MODULE_0__["sum"](tt, (d) => Number(d));
            const tmpO = {};
            ydata.forEach((d) => {
                tmpO[`pre-${d}`] = {
                    size: size(Number(item[`num-${d}`])),
                    percent: Math.round(Number(item[`num-${d}`]) * 10000 / tsum) / 100,
                    value: Number(item[`num-${d}`]),
                    sum: tsum,
                };
                if (tmpO[`pre-${d}`].size === max) {
                    tmpO.maxKey = `pre-${d}`;
                }
            });
            tmpO.month = Number(item.month);
            tmpA.push(tmpO);
        });
        return tmpA;
    }
    function drawPoint(preData) {
        const circles = svg.selectAll('path').data(data);
        let dynamicColor = '';
        ydata.forEach((item) => {
            circles.join('path')
                .attr('fill', 'rgba(24, 100, 169, 0.7)')
                .attr('transform', (d) => `translate(${x(Number(d.month) / 3) + config.chartMarginL}, ${y(item) + config.chartMarginB})`)
                .attr('stroke', 'none')
                .attr('stroke-width', '2px')
                .attr('class', (d, i) => `pre-${item}-${i}`)
                .attr('d', ((d, i) => {
                return d3__WEBPACK_IMPORTED_MODULE_0__["symbol"]()
                    .size(preData[i][`pre-${item}`].size)
                    .type(d3__WEBPACK_IMPORTED_MODULE_0__["symbolCircle"])();
            }))
                .on('mouseover', function (d, i) {
                const tid = d3__WEBPACK_IMPORTED_MODULE_0__["select"](this).attr('class').split('-')[2];
                dynamicColor = d3__WEBPACK_IMPORTED_MODULE_0__["select"](this).attr('fill');
                ydata.forEach((iitem) => {
                    d3__WEBPACK_IMPORTED_MODULE_0__["selectAll"](`.pre-${iitem}-${tid}`).attr('fill', d3__WEBPACK_IMPORTED_MODULE_0__["rgb"](dynamicColor).brighter(1));
                });
                const tmpD = [
                    {
                        name: '时间',
                        value: d.month + '个月',
                    },
                ];
                ydata.forEach((iitem) => {
                    tmpD.push({
                        name: iitem + '',
                        value: d[`num-${iitem}`] + `(${Math.round(d[`num-${iitem}`] * 10000 / preData[i][`pre-${item}`].sum) / 100}%)`,
                    });
                });
                const tmpC = tooltip.select('text.content').selectAll('tspan').data(tmpD);
                tmpC.text((dd) => `${dd.name}: ${dd.value}`);
                tmpC.enter().append('tspan').attr('y', (dd, ii) => (ii) * 20 - 5).attr('x', -40).text((dd) => `${dd.name}: ${dd.value}`);
                tmpC.exit().remove();
                let tc = 0;
                if (i === data.length - 1) {
                    tc = -20;
                }
                else {
                    tc = config.chartMarginL + 60;
                }
                tooltip.attr('transform', 'translate(' + (x(Number(d.month) / 3) + tc) + ',' + (200) + ')');
            })
                .on('mouseout', function (d) {
                const tid = d3__WEBPACK_IMPORTED_MODULE_0__["select"](this).attr('class').split('-')[2];
                ydata.forEach((iitem) => {
                    d3__WEBPACK_IMPORTED_MODULE_0__["selectAll"](`.pre-${iitem}-${tid}`).attr('fill', dynamicColor);
                });
                tooltip.attr('transform', 'translate(-100,-100)');
            });
        });
        preData.forEach((item) => {
            svg.append('text')
                .attr('x', x(Number(item.month) / 3) + config.chartMarginL)
                .attr('y', y(item.maxKey.split('-')[1]) + config.chartMarginB)
                .text(Math.round(item[item.maxKey].percent) + '%')
                .attr('dx', 11)
                .attr('dy', 5);
        });
    }
    function drawToolTip() {
        tooltip = svg.append('g')
            .attr('transform', 'translate(-100,-100)')
            .attr('class', 'hoverFocus');
        tooltip.append('text')
            .attr('class', 'content')
            .attr('y', -10);
    }
});
/* harmony default export */ __webpack_exports__["default"] = ({});


/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,