(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["line"],{

/***/ "rhlo":
/*!****************************!*\
  !*** ./src/line/index.css ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../../node_modules/css-loader/dist/cjs.js!./index.css */ "sIYj");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../../node_modules/style-loader/lib/addStyles.js */ "aET+")(content, options);

if(content.locals) module.exports = content.locals;

if(true) {
	module.hot.accept(/*! !../../node_modules/css-loader/dist/cjs.js!./index.css */ "sIYj", function() {
		var newContent = __webpack_require__(/*! !../../node_modules/css-loader/dist/cjs.js!./index.css */ "sIYj");

		if(typeof newContent === 'string') newContent = [[module.i, newContent, '']];

		var locals = (function(a, b) {
			var key, idx = 0;

			for(key in a) {
				if(!b || a[key] !== b[key]) return false;
				idx++;
			}

			for(key in b) idx--;

			return idx === 0;
		}(content.locals, newContent.locals));

		if(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');

		update(newContent);
	});

	module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ "sIYj":
/*!******************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./src/line/index.css ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/api.js */ "JPst")(false);
// Module
exports.push([module.i, ".chart {\n    background:rgba(37,39,46,1);\n}\n\n.chart text{\n    fill: white;\n    font: 10px sans-serif;\n    text-anchor: end;\n}\n\n.chart .axis text {\n    font: 10px sans-serif;\n}\n\n.chart .axis path, .chart .axis line {\n    fill: none;\n    stroke: white;\n    shape-rendering: crispEdges;\n}\n\n.voronoi path {\n    fill: none;\n    pointer-events: all;\n}\n  \n.voronoi--show path {\n    stroke: red;\n    stroke-opacity: 0.2;\n}\n\n.city--hover {\n    stroke: red;\n}\n\n.cities {\n    fill: none;\n    stroke: #aaa;\n    stroke-linejoin: round;\n    stroke-linecap: round;\n    stroke-width: 1.5px;\n}\n\n.focus text {\n    text-anchor: middle;\n    text-shadow: 0 1px 0 #fff, 1px 0 0 #fff, 0 -1px 0 #fff, -1px 0 0 #fff;\n}", ""]);


/***/ }),

/***/ "uSaw":
/*!***************************!*\
  !*** ./src/line/index.ts ***!
  \***************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3 */ "VphZ");
/* harmony import */ var _index_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index.css */ "rhlo");
/* harmony import */ var _index_css__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_index_css__WEBPACK_IMPORTED_MODULE_1__);


document.body.innerHTML = '';
const config = {
    chartWidth: 600,
    chartHeight: 300,
    chartMarginL: 50,
    chartMarginR: 50,
    chartMarginT: 50,
    chartMarginB: 50,
};
const lineChart = (Config, ChartData) => {
    const svg = generateSvg();
    const x = generateX();
    const y = generateY();
    generateLine();
    generatePoint();
    const tooltip = generateTooltip();
    handleInteractive();
    function generateSvg() {
        return d3__WEBPACK_IMPORTED_MODULE_0__["select"]('body')
            .append('svg')
            .attr('fill', 'none')
            .attr('stroke-linejoin', 'round')
            .attr('stroke-linecap', 'round')
            .attr('class', 'chart')
            .style('width', Config.chartWidth)
            .style('height', Config.chartHeight);
    }
    function generateX() {
        const tx = d3__WEBPACK_IMPORTED_MODULE_0__["scaleTime"]()
            .domain([new Date(ChartData[0].values[0].month), new Date(ChartData[0].values[ChartData[0].values.length - 1].month)])
            .range([0, config.chartWidth - config.chartMarginR - config.chartMarginL]);
        // ------x轴------
        const fomateTime = d3__WEBPACK_IMPORTED_MODULE_0__["timeFormat"]('%Y-%m');
        const xg = svg
            .append('g')
            .attr('class', 'x axis')
            .attr('transform', `translate(${Config.chartMarginL}, ${Config.chartHeight - Config.chartMarginB})`);
        d3__WEBPACK_IMPORTED_MODULE_0__["axisBottom"](tx)
            .tickArguments([d3__WEBPACK_IMPORTED_MODULE_0__["timeMonth"].every(4)])
            .tickSize(0)
            .tickPadding(8)
            .tickFormat(fomateTime)(xg);
        xg.selectAll('.tick text').attr('dx', 15);
        return tx;
    }
    function generateY() {
        const ty = d3__WEBPACK_IMPORTED_MODULE_0__["scaleLinear"]()
            .domain([0, 1.1 * d3__WEBPACK_IMPORTED_MODULE_0__["max"](ChartData[0].values, (d) => Number(d.person))])
            .range([Config.chartHeight - Config.chartMarginT - Config.chartMarginB, 0]);
        // -----y轴------
        const formate = d3__WEBPACK_IMPORTED_MODULE_0__["format"]('.' + d3__WEBPACK_IMPORTED_MODULE_0__["precisionFixed"](0.1) + 'f');
        const yg = svg
            .append('g')
            .attr('class', 'y axis')
            .attr('transform', `translate(${Config.chartMarginT}, ${Config.chartMarginL})`);
        d3__WEBPACK_IMPORTED_MODULE_0__["axisRight"](ty)
            .ticks(10, formate)
            .tickSizeInner(Config.chartWidth - Config.chartMarginR - Config.chartMarginL)
            .tickPadding(8)(yg);
        // 移除y轴的竖线
        yg.select('.domain').remove();
        // 对y轴tick中的line设置线的样式
        yg.selectAll('.tick:not(:first-of-type) line')
            .attr('stroke-opacity', 0.5)
            .attr('stroke-dasharray', '2,2');
        // 设置y轴的文字的位置
        yg.selectAll('.tick text').attr('x', 4).attr('dy', -4);
        return ty;
    }
    function generateLine() {
        // 折线
        const line = d3__WEBPACK_IMPORTED_MODULE_0__["line"]()
            .defined((d) => !isNaN(d.person))
            .x((d) => {
            return x(new Date(d.month)) + Config.chartMarginL;
        })
            .y((d) => {
            return y(d.person) + Config.chartMarginT;
        });
        svg.append('g')
            .selectAll('path')
            .data(ChartData)
            .enter()
            .append('path')
            .attr('stroke', 'steelblue')
            .attr('stroke-width', 1.5)
            .attr('d', function (d) {
            d.line = this;
            return line(d.values);
        });
    }
    function generatePoint() {
        // 点
        const sb = d3__WEBPACK_IMPORTED_MODULE_0__["symbol"]()
            .size(5)
            .type(d3__WEBPACK_IMPORTED_MODULE_0__["symbolCircle"]);
        svg.append('g')
            .selectAll('path')
            .data(ChartData[0].values)
            .enter()
            .append('path')
            .attr('class', 'point')
            .attr('transform', (d, i) => {
            return `translate(${x(new Date(d.month)) + Config.chartMarginL}, ${y(Number(d.person)) + Config.chartMarginT})`;
        })
            .attr('fill', '#fff')
            .attr('d', sb);
    }
    function generateTooltip() {
        const ttip = svg.append('g')
            .attr('transform', 'translate(-100,-100)')
            .attr('class', 'focus');
        ttip.append('circle')
            .style('fill', '#fff')
            .attr('r', 3.5);
        ttip.append('text')
            .attr('class', 'title')
            .attr('y', -20);
        ttip.append('text')
            .attr('class', 'content')
            .attr('y', -10);
        return ttip;
    }
    function handleInteractive() {
        // 处理交互事件
        const voronoi = d3__WEBPACK_IMPORTED_MODULE_0__["voronoi"]() // 泰森多边型
            .x((d) => {
            return x(new Date(d.month)) + Config.chartMarginL;
        })
            .y((d) => y(d.person) + Config.chartMarginT)
            .extent([[Config.chartMarginL, Config.chartMarginT], [Config.chartWidth - Config.chartMarginL, Config.chartHeight - Config.chartMarginT]]);
        const voronoiGroup = svg.append('g').attr('class', 'voronoi');
        voronoiGroup.selectAll('path')
            .data(voronoi.polygons(d3__WEBPACK_IMPORTED_MODULE_0__["merge"](ChartData.map((d) => d.values))))
            .enter()
            .append('path')
            .attr('d', (d) => {
            return d ? 'M' + d.join('L') + 'Z' : null;
        })
            .on('mouseover', (d) => {
            d3__WEBPACK_IMPORTED_MODULE_0__["select"](d.data.originLine.line).classed('city--hover', true);
            d.data.originLine.line.parentNode.appendChild(d.data.originLine.line);
            tooltip.attr('transform', 'translate(' + (x(new Date(d.data.month)) + Config.chartMarginL) + ',' + (y(d.data.person) + Config.chartMarginT) + ')');
            tooltip.select('text.title').text(d.data.originLine.name);
            tooltip.select('text.content').text(d.data.month + ': ' + d.data.person + '人');
        })
            .on('mouseout', (d) => {
            d3__WEBPACK_IMPORTED_MODULE_0__["select"](d.data.originLine.line).classed('city--hover', false);
            tooltip.attr('transform', 'translate(-100,-100)');
        });
    }
};
d3__WEBPACK_IMPORTED_MODULE_0__["json"]('./static/line.json').then((data) => {
    // 本例采用单根线，其实可以应用多根线，请自行拓展
    const d = [{
            name: '每月骑行人数',
            values: data.list,
        }];
    d.forEach((item) => {
        item.values.forEach((d) => {
            d.originLine = item;
        });
    });
    lineChart(config, d);
});
/* harmony default export */ __webpack_exports__["default"] = ({});


/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,