(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["line-brush"],{

/***/ "8xou":
/*!***********************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./src/lineBrush/index.css ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/api.js */ "JPst")(false);
// Module
exports.push([module.i, "body, html{\n    margin: 0;\n    padding: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.chart{\n    font: 10px sans-serif;\n}\n\n.axis-grid .domain {\n    fill: #ddd;\n    stroke: none;\n}\n\n.axis-x .domain, .axis-grid .tick line {\n    stroke: #fff;\n}\n\n.chartpath {\n    fill: steelblue;\n    clip-path: url(#clip);\n}\n  \n.zoom {\n    cursor: move;\n    fill: none;\n    pointer-events: all;\n}", ""]);


/***/ }),

/***/ "gvbp":
/*!*********************************!*\
  !*** ./src/lineBrush/index.css ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../../node_modules/css-loader/dist/cjs.js!./index.css */ "8xou");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../../node_modules/style-loader/lib/addStyles.js */ "aET+")(content, options);

if(content.locals) module.exports = content.locals;

if(true) {
	module.hot.accept(/*! !../../node_modules/css-loader/dist/cjs.js!./index.css */ "8xou", function() {
		var newContent = __webpack_require__(/*! !../../node_modules/css-loader/dist/cjs.js!./index.css */ "8xou");

		if(typeof newContent === 'string') newContent = [[module.i, newContent, '']];

		var locals = (function(a, b) {
			var key, idx = 0;

			for(key in a) {
				if(!b || a[key] !== b[key]) return false;
				idx++;
			}

			for(key in b) idx--;

			return idx === 0;
		}(content.locals, newContent.locals));

		if(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');

		update(newContent);
	});

	module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ "sxrx":
/*!********************************!*\
  !*** ./src/lineBrush/index.ts ***!
  \********************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3 */ "VphZ");
/* harmony import */ var _index_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index.css */ "gvbp");
/* harmony import */ var _index_css__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_index_css__WEBPACK_IMPORTED_MODULE_1__);


const svgWidth = 1200;
const svgHeight = 400;
const brushHight = 200;
const margin = {
    left: 50,
    right: 50,
    top: 25,
    bottom: 25,
};
const color = d3__WEBPACK_IMPORTED_MODULE_0__["hsl"]('#fea').brighter(0.3);
// 创建svg图
const svg = d3__WEBPACK_IMPORTED_MODULE_0__["select"]('body')
    .append('svg')
    .attr('class', 'chart')
    .style('background', color.toString())
    .attr('width', svgWidth)
    .attr('height', svgHeight);
// 随机生成原始数据
const data = [];
const formate = d3__WEBPACK_IMPORTED_MODULE_0__["format"]('.1f');
const random = d3__WEBPACK_IMPORTED_MODULE_0__["randomUniform"](10, 300);
for (let i = 0; i < 100; i++) {
    data.push(Number(formate(random())));
}
// x轴和y轴范围
const x = d3__WEBPACK_IMPORTED_MODULE_0__["scaleLinear"]().domain([0, data.length - 1]).range([0, svgWidth - margin.left - margin.right]);
const y = d3__WEBPACK_IMPORTED_MODULE_0__["scaleLinear"]().domain([0, d3__WEBPACK_IMPORTED_MODULE_0__["max"](data)]).range([svgHeight - brushHight - margin.top - margin.bottom, 0]);
const chart = svg.append('g')
    .attr('class', 'line')
    .attr('width', svgWidth)
    .attr('height', svgHeight - brushHight);
// 生成面积图
const area = d3__WEBPACK_IMPORTED_MODULE_0__["area"]()
    .x((d, i) => x(i) + margin.left)
    .y0(y(0) + margin.top)
    .y1((d) => y(d) + margin.bottom)
    .curve(d3__WEBPACK_IMPORTED_MODULE_0__["curveCatmullRom"].alpha(0.5));
chart.append('path')
    .attr('class', 'chartpath')
    .datum(data)
    .attr('fill', 'steelblue')
    .attr('d', area);
// 定义x坐标轴
const xAxis = d3__WEBPACK_IMPORTED_MODULE_0__["axisBottom"](x).ticks(10).tickSize(1).tickPadding(8);
chart
    .append('g')
    .attr('class', 'x axis')
    .attr('transform', `translate(${margin.left}, ${svgHeight - brushHight - margin.bottom})`)
    .call(xAxis);
// 定义y坐标轴
chart
    .append('g')
    .attr('class', 'y axis')
    .attr('transform', `translate(${margin.left}, ${margin.top})`)
    .call(d3__WEBPACK_IMPORTED_MODULE_0__["axisLeft"](y).ticks(10).tickSize(1).tickPadding(8));
// 刷子
const brushX = d3__WEBPACK_IMPORTED_MODULE_0__["scaleLinear"]().domain([0, data.length - 1]).range([0, svgWidth - 100]);
const brushY = d3__WEBPACK_IMPORTED_MODULE_0__["scaleLinear"]().domain([0, 300]).range([50, 0]);
const brush = svg
    .append('g')
    .attr('transform', `translate(0, ${svgHeight - 200})`)
    .attr('width', svgWidth)
    .attr('height', 50);
const brushHandle = d3__WEBPACK_IMPORTED_MODULE_0__["brushX"]()
    .handleSize(20)
    .extent([[50, 25], [svgWidth - 50, 75]])
    .on('brush end', brushended);
brush.append('g')
    .attr('class', 'brush')
    .call(brushHandle)
    .call(brushHandle.move, [50, svgWidth - 50]);
// 画刷的内部图形
const brushArea = d3__WEBPACK_IMPORTED_MODULE_0__["area"]()
    .defined((d) => !isNaN(d))
    .x((d, i) => brushX(i) + 50)
    .y0(brushY(0) + 25)
    .y1((d) => brushY(d) + 25)
    .curve(d3__WEBPACK_IMPORTED_MODULE_0__["curveCatmullRom"].alpha(0.5));
brush.append('path')
    .datum(data.filter(brushArea.defined()))
    .attr('fill', color.toString())
    .attr('d', brushArea);
brush.append('path')
    .datum(data)
    .attr('fill', 'steelblue')
    .attr('d', brushArea);
// 放大缩小
const zm = d3__WEBPACK_IMPORTED_MODULE_0__["zoom"]()
    .translateExtent([[0, 0], [svgWidth, svgHeight]])
    .scaleExtent([1, Infinity])
    .extent([[0, 0], [svgWidth, svgHeight]])
    .on('zoom', () => {
    if (d3__WEBPACK_IMPORTED_MODULE_0__["event"].sourceEvent && d3__WEBPACK_IMPORTED_MODULE_0__["event"].sourceEvent.type !== 'brush') {
        const t = d3__WEBPACK_IMPORTED_MODULE_0__["event"].transform;
        x.domain(t.rescaleX(brushX).domain());
        chart.select('.chartpath').attr('d', area);
        chart.select('.axis').call(xAxis);
        brush.select('.brush').call(brushHandle.move, x.range().map(t.invertX, t).map((d) => d + 50));
    } // ignore zoom-by-brush
});
// 当超出图形区域将其隐藏
svg.append('defs').append('clipPath')
    .attr('id', 'clip')
    .append('rect')
    .attr('transform', `translate(50, 0)`)
    .attr('width', svgWidth - 100)
    .attr('height', svgHeight);
svg.append('rect')
    .attr('class', 'zoom')
    .attr('width', svgWidth)
    .attr('height', svgHeight - 200)
    .call(zm);
function brushended() {
    if (d3__WEBPACK_IMPORTED_MODULE_0__["event"].sourceEvent && d3__WEBPACK_IMPORTED_MODULE_0__["event"].sourceEvent.type !== 'zoom') {
        const s = d3__WEBPACK_IMPORTED_MODULE_0__["event"].selection.map((d) => d - 50) || [0, svgWidth - 100];
        x.domain(s.map(brushX.invert, brushX));
        chart.select('.chartpath').attr('d', area);
        chart.select('.axis').call(xAxis);
        svg.select('.zoom')
            .call(zm.transform, d3__WEBPACK_IMPORTED_MODULE_0__["zoomIdentity"]
            .scale((svgWidth - 100) / (s[1] - s[0]))
            .translate(-s[0], 0));
    } // ignore brush-by-zoom
}


/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,